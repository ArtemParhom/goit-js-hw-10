{"mappings":"8hBAAO,SAASA,EAAeC,GAC3B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,MAAM,uCAA4CC,OAALL,EAAK,oDAC7CM,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,M,IAEnBL,MAAK,SAAAM,GACFV,EAAQU,E,IAEXC,OAAM,SAAAC,GACHX,EAAOW,E","sources":["src/fetchCountries.js"],"sourcesContent":["export function fetchCountries(name) {\n    return new Promise((resolve, reject) => {\n        fetch(`https://restcountries.com/v3.1/name/${name}?fields=name,capital,flags,languages,population`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(data => {\n                resolve(data);\n            })\n            .catch(error => {\n                reject(error);\n            });\n    }); \n};\n\n//-------------------------------\n\n\n// import debounce from \"lodash.debounce\";\n// import { Notify } from \"notiflix\";\n\n\n// const countryInputEl = document.querySelector(`#search-box`);\n// const countryListEl = document.querySelector('.country-list');\n\n// countryInputEl.addEventListener(`input`, \n//     debounce((evn) => {\n//         const input = evn.target.value;\n//         const trimInput = input.trim();\n//         fetchCountries(`${trimInput}`)\n//             .then(data => {\n//                 if (data.length > 10) {\n//                     Notify.info(\"Too many matches found. Please enter a more specific name.\")\n//                     return;\n//                 }\n//                 if (data.length === 1) {\n\n//                     const dataInd = data[0];\n\n//                     valuesOfCountry = { countryName: dataInd.name.official, capitalCountry: dataInd.capital[0], flagCountry: dataInd.flags.svg, languageCountry: dataInd.languages[Object.keys(dataInd.languages)[0]], populationCountry: dataInd.population };\n\n//                     countryListEl.innerHTML = `<h3><img src=${valuesOfCountry.flagCountry} alt=0 width=40  height=40>${valuesOfCountry.countryName}</h3><p>Capital:${valuesOfCountry.capitalCountry}</p><p>Population:${valuesOfCountry.populationCountry}</p><p>Languages:${valuesOfCountry.languageCountry}</p>`;\n//                     return;\n//                 }\n//                 if (data.length < 10 && data.length > 1) {\n//                     var result = ``;\n            \n//                     for (var i = 0; i < data.length; i++) {\n//                         result += `<h3><img src=${data[i].flags.svg} alt=0 width=40  height=40>${data[i].name.official}</h3>`;\n//                     }\n//                     countryListEl.innerHTML = result;\n//                     return;\n//                 }\n//             })\n//             .catch(error => {\n//                 Notify.failure(`Oops, there is no country with that name`); \n//         });     \n//     }, 300)\n// );\n\n\n    \n\n\n\n\n\n\n\n\n  "],"names":["$244f2db7c7c4b658$export$1d1c4391ecac81e8","name","Promise","resolve","reject","fetch","concat","then","response","ok","Error","status","json","data","catch","error"],"version":3,"file":"index.d8086d85.js.map"}